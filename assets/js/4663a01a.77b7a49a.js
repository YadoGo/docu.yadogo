"use strict";(self.webpackChunkyadogo_docu=self.webpackChunkyadogo_docu||[]).push([[395],{3905:(e,a,r)=>{r.d(a,{Zo:()=>c,kt:()=>f});var t=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=t.createContext({}),p=function(e){var a=t.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},c=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),u=n,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return r?t.createElement(f,i(i({ref:a},c),{},{components:r})):t.createElement(f,i({ref:a},c))}));function f(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[m]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1676:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var t=r(7462),n=(r(7294),r(3905));const o={sidebar_label:"Gitflow Commands",sidebar_position:3},i=void 0,l={unversionedId:"git/gitflow_commands",id:"git/gitflow_commands",title:"gitflow_commands",description:"GitFlow es una estrategia de ramificaci\xf3n de Git que se utiliza com\xfanmente en proyectos de desarrollo de software. Es una metodolog\xeda para gestionar ramas y flujos de trabajo en un repositorio Git, lo que ayuda a mantener una estructura organizada y facilita la colaboraci\xf3n entre desarrolladores. A continuaci\xf3n, te proporcionar\xe9 los pasos b\xe1sicos para implementar GitFlow en un proyecto:",source:"@site/docs/git/gitflow_commands.md",sourceDirName:"git",slug:"/git/gitflow_commands",permalink:"/yadogo-docu/docs/git/gitflow_commands",draft:!1,editUrl:"https://yadogo.github.io/yadogo-docu/docs/git/gitflow_commands.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Gitflow Commands",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Flujo de trabajo de Gitflow",permalink:"/yadogo-docu/docs/git/branch"}},s={},p=[],c={toc:p},m="wrapper";function d(e){let{components:a,...r}=e;return(0,n.kt)(m,(0,t.Z)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"GitFlow es una estrategia de ramificaci\xf3n de Git que se utiliza com\xfanmente en proyectos de desarrollo de software. Es una metodolog\xeda para gestionar ramas y flujos de trabajo en un repositorio Git, lo que ayuda a mantener una estructura organizada y facilita la colaboraci\xf3n entre desarrolladores. A continuaci\xf3n, te proporcionar\xe9 los pasos b\xe1sicos para implementar GitFlow en un proyecto:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Iniciar un repositorio Git:")," Si a\xfan no tienes un repositorio Git, crea uno en la plataforma de alojamiento que prefieras (por ejemplo, GitHub, GitLab o Bitbucket). Inicia el repositorio con un archivo ",(0,n.kt)("inlineCode",{parentName:"p"},"README.md")," y un archivo ",(0,n.kt)("inlineCode",{parentName:"p"},".gitignore")," para evitar incluir archivos innecesarios en el control de versiones.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Configurar GitFlow:")," Aseg\xfarate de tener GitFlow instalado en tu sistema. Puedes instalarlo utilizando un administrador de paquetes como Homebrew (en macOS) o mediante descarga directa. Una vez instalado, inicializa GitFlow en el repositorio:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git flow init\n")),(0,n.kt)("p",{parentName:"li"},"Esto configurar\xe1 las ramas principales utilizadas en GitFlow: ",(0,n.kt)("inlineCode",{parentName:"p"},"develop")," para el desarrollo en curso y ",(0,n.kt)("inlineCode",{parentName:"p"},"master")," para reflejar la producci\xf3n estable.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Flujo de trabajo:")," El flujo de trabajo de GitFlow involucra dos ramas principales: ",(0,n.kt)("inlineCode",{parentName:"p"},"develop")," y ",(0,n.kt)("inlineCode",{parentName:"p"},"master"),", junto con otras ramas temporales. Los cambios nuevos se realizan en una rama temporal y luego se integran en las ramas principales."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"master"),": Representa la versi\xf3n del c\xf3digo en producci\xf3n, es decir, la rama estable y lista para el despliegue en producci\xf3n."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"develop"),": Es la rama que contiene las \xfaltimas caracter\xedsticas y correcciones que se han completado y se encuentran en pruebas para ser lanzadas en la pr\xf3xima versi\xf3n."),(0,n.kt)("li",{parentName:"ul"},"Ramas temporales:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"feature"),": Para agregar nuevas caracter\xedsticas. Se crean desde ",(0,n.kt)("inlineCode",{parentName:"li"},"develop")," y se fusionan nuevamente en ",(0,n.kt)("inlineCode",{parentName:"li"},"develop")," cuando est\xe1n listas."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"release"),": Cuando ",(0,n.kt)("inlineCode",{parentName:"li"},"develop")," alcanza un estado estable y se va a preparar una nueva versi\xf3n, se crea una rama de lanzamiento. Desde esta rama, solo se permiten correcciones de errores. Una vez que est\xe1 lista para ser lanzada, se fusiona tanto en ",(0,n.kt)("inlineCode",{parentName:"li"},"master")," como en ",(0,n.kt)("inlineCode",{parentName:"li"},"develop"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"hotfix"),": Si surge una correcci\xf3n cr\xedtica en producci\xf3n, se crea una rama de hotfix desde ",(0,n.kt)("inlineCode",{parentName:"li"},"master"),", se corrige el problema y luego se fusiona en ",(0,n.kt)("inlineCode",{parentName:"li"},"master")," y ",(0,n.kt)("inlineCode",{parentName:"li"},"develop"),"."))))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Crear y trabajar con ramas:")," Cuando empieces a trabajar en una nueva funcionalidad, crea una rama de ",(0,n.kt)("inlineCode",{parentName:"p"},"feature")," desde ",(0,n.kt)("inlineCode",{parentName:"p"},"develop"),":"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git flow feature start nombre_de_la_funcionalidad\n")),(0,n.kt)("p",{parentName:"li"},"Realiza tus cambios y, una vez completada la funcionalidad, finaliza la rama:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git flow feature finish nombre_de_la_funcionalidad\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Lanzar una versi\xf3n:")," Cuando hayas realizado suficientes cambios en la rama ",(0,n.kt)("inlineCode",{parentName:"p"},"develop")," y est\xe9s listo para lanzar una nueva versi\xf3n, crea una rama de ",(0,n.kt)("inlineCode",{parentName:"p"},"release"),":"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git flow release start 1.0.0\n")),(0,n.kt)("p",{parentName:"li"},"Realiza las pruebas necesarias, corrige problemas si los hay y, cuando est\xe9 lista para ser lanzada, finaliza la rama de ",(0,n.kt)("inlineCode",{parentName:"p"},"release"),":"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git flow release finish 1.0.0\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Corregir problemas en producci\xf3n:")," Si surge un problema cr\xedtico en la rama ",(0,n.kt)("inlineCode",{parentName:"p"},"master"),", puedes crear una rama de ",(0,n.kt)("inlineCode",{parentName:"p"},"hotfix")," para corregirlo:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git flow hotfix start nombre_del_hotfix\n")),(0,n.kt)("p",{parentName:"li"},"Realiza la correcci\xf3n, finaliza la rama de ",(0,n.kt)("inlineCode",{parentName:"p"},"hotfix")," y aseg\xfarate de fusionarla tanto en ",(0,n.kt)("inlineCode",{parentName:"p"},"master")," como en ",(0,n.kt)("inlineCode",{parentName:"p"},"develop"),":"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git flow hotfix finish nombre_del_hotfix\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Publicar ramas:")," No olvides que despu\xe9s de crear una rama (feature, release o hotfix), debes publicarla en el repositorio remoto para que otros miembros del equipo puedan colaborar:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git push origin nombre_de_la_rama\n")))),(0,n.kt)("p",null,"Recuerda que GitFlow es una gu\xeda, y algunos equipos pueden adaptarlo para satisfacer sus necesidades espec\xedficas. Aseg\xfarate de comunicarte con tu equipo y seguir las pr\xe1cticas establecidas por tu organizaci\xf3n para garantizar una colaboraci\xf3n fluida y eficiente."))}d.isMDXComponent=!0}}]);